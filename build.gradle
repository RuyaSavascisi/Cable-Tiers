buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        url = uri("https://maven.pkg.github.com/refinedmods/refinedstorage")
        /* As of december 2021, GitHub packages requires authentication.
           The password below is a personal access token that has read access to the Refined Mods repos.
           It can be reused in other projects.
           See: https://github.community/t/download-from-github-package-registry-without-authentication/14407/38 and
                https://github.community/t/download-from-github-package-registry-without-authentication/14407/44
         */
        credentials {
            username = "anything"
            password = "\u0067hp_oGjcDFCn8jeTzIj4Ke9pLoEVtpnZMP4VQgaX"
        }
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

version = "${mod_version}"
group = "com.YTrollman.CableTiers"
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${mc_version}"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=cabletiers.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            // property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                cabletiers {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=cabletiers.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            // property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                cabletiers {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=cabletiers.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            // property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            args '--mod', 'cabletiers', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                cabletiers {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:${jei_version}")

    implementation fg.deobf("com.refinedmods:refinedstorage:1.10.3") {
        transitive false
    }
    implementation fg.deobf('curse.maven:rsrequestify-307788:3617200')

    implementation fg.deobf('curse.maven:extrastorage-410168:3718149')
    implementation fg.deobf('curse.maven:spark-361579:3824951')
    implementation fg.deobf('curse.maven:mekanism-268560:3833669')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "cabletiers",
                "Specification-Vendor"    : "cabletiers",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "${project.name}",
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "cabletiers",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}